What happens when you initialize a repository? Why do you need to do it?

	The .git folder is created.
	I need to do it in order to start tracking versions of the files

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	It's a middle space between the two of them. It saves space as you only need to add the files you are working on.

How can you use the staging area to make sure you have one commit per logical change?

	Adding to the staging area only the files I've used for that logical change, and the rest of the files that might have been
	changed, to the staging area but before commiting

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	When you are trying experimental features, or what to try a change without
	altering the main program.
	As the have human names, it's easier to switch from one to another commit.

How do the diagrams help you visualize the branch structure?

	It's a graphical aid. That way you can easily understand in
	which commit did the branch started.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	The code is now the merge of the code in the two merging branches.
	Because a new commit is created and it stores information from both of its parents.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?

	Pros: you don't have to add/remove each line individually
	Cons: It can lead to merge conflicts